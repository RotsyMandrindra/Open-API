openapi: 3.0.3
info:
  title: 1.1 onboarding API
  description: STD22025
  version: 1.0.0
servers:
  - url: 'https://STD22025.com'
paths:
  /student:
    get:
      summary: Get student data
      tags:
        - Students
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        '500':
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
    post:
      summary: Add a new student
      tags:
        - Students
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewStudent'
      responses:
        '200':
          description: Student added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '500':
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
  /student/{studentId}:
    put:
      summary: Update a student's information
      tags:
        - Students
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewStudent'
      responses:
        '200':
          description: Student updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '500':
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
    delete:
      summary: Delete a student
      tags:
        - Students
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Student deleted successfully
        '500':
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
  /teacher:
    get:
      summary: Get teacher data
      tags:
        - Teachers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Teacher'
        '500':
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
    post:
      summary: Add a new teacher
      tags:
        - Teachers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTeacher'
      responses:
        '200':
          description: Teacher added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
        '500':
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
components:
  schemas:
    Student:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        std:
          type: string
        birthdate:
          type: string
    NewStudent:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Randria
        std:
          type: string
          example: std22001
        birthdate:
          type: string
          example: 2003-02-14
    Teacher:
      type: object
      properties:
        id:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        courses:
          type: array
          items:
            type: object
            properties:
              courseName:
                type: string
              courseCode:
                type: string
              courseDuration:
                type: string
    NewTeacher:
      type: object
      properties:
        firstName:
          type: string
          example: Tokimahery
        lastName:
          type: string
          example: RAMAROZAKA
        courses:
          type: array
          items:
            type: object
            properties:
              courseName:
                type: string
                example: Algorithmique
              courseCode:
                type: string
                example: PROG1
              courseDuration:
                type: string
                example: 60h
